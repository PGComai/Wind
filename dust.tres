[gd_resource type="ShaderMaterial" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeInput" id=59]
input_name = "normal"

[sub_resource type="VisualShaderNodeColorUniform" id=60]
uniform_name = "dust_color"
default_value_enabled = true
default_value = Color( 0.552734, 0.488586, 0.344862, 1 )

[sub_resource type="VisualShaderNodeInput" id=63]
input_name = "view"

[sub_resource type="VisualShaderNodeDotProduct" id=64]

[sub_resource type="OpenSimplexNoise" id=65]

[sub_resource type="NoiseTexture" id=66]
seamless = true
noise = SubResource( 65 )

[sub_resource type="VisualShaderNodeTexture" id=67]
texture = SubResource( 66 )

[sub_resource type="VisualShaderNodeColorOp" id=68]
output_port_for_preview = 0
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=69]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShader" id=61]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible, unshaded;

uniform vec4 dust_color : hint_color = vec4(0.552734, 0.488586, 0.344862, 1.000000);



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = dust_color.rgb;
	float n_out3p1 = dust_color.a;

// Input:2
	vec3 n_out2p0 = NORMAL;

// Input:4
	vec3 n_out4p0 = VIEW;

// DotProduct:5
	float n_out5p0 = dot(n_out2p0, n_out4p0);

// ScalarOp:8
	float n_in8p1 = 2.00000;
	float n_out8p0 = n_out5p0 / n_in8p1;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out8p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 696.52, 97.5333 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 2200, 460 )
nodes/fragment/2/node = SubResource( 59 )
nodes/fragment/2/position = Vector2( 880, 980 )
nodes/fragment/3/node = SubResource( 60 )
nodes/fragment/3/position = Vector2( 880, 120 )
nodes/fragment/4/node = SubResource( 63 )
nodes/fragment/4/position = Vector2( 900, 1200 )
nodes/fragment/5/node = SubResource( 64 )
nodes/fragment/5/position = Vector2( 1240, 1080 )
nodes/fragment/6/node = SubResource( 67 )
nodes/fragment/6/position = Vector2( 760, 560 )
nodes/fragment/7/node = SubResource( 68 )
nodes/fragment/7/position = Vector2( 1440, 200 )
nodes/fragment/8/node = SubResource( 69 )
nodes/fragment/8/position = Vector2( 1605.5, 894.5 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 4, 0, 5, 1, 3, 0, 7, 0, 6, 0, 7, 1, 3, 0, 0, 0, 5, 0, 8, 0, 8, 0, 0, 1 )

[resource]
shader = SubResource( 61 )
shader_param/dust_color = Color( 0.552734, 0.488586, 0.344862, 1 )
